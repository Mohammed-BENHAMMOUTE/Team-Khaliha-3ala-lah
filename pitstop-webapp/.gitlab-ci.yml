stages:
  - build
  - security
  - package

build-webapp-service:
  stage: build
  image: node:10
  script:
    - cd pitstop-webapp
    - npm install --production=false
    - npm run build
  artifacts:
    paths:
      - pitstop-webapp/dist/
  cache:
      paths:
          - pitstop-webapp/node_modules/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: always
    - when: never

webapp-security-scan:
  stage: security
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "devSecOps"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never
  script:
    - trivy fs --format json -o trivy-report.json --severity HIGH,CRITICAL ./pitstop-webapp
  artifacts:
    paths:
      - trivy-report.json
    expire_in: 1 week

package-webapp-service:
  stage: package
  image: docker:24
  services:
    - docker:24-dind
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - pitstop-webapp/**
      when: always
    - when: never
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build -t "$CI_REGISTRY_USER/pitstop-webapp:$CI_COMMIT_SHA" -t "$CI_REGISTRY_USER/pitstop-webapp:latest" ./pitstop-webapp
    - docker push "$CI_REGISTRY_USER/pitstop-webapp:$CI_COMMIT_SHA"
    - docker push "$CI_REGISTRY_USER/pitstop-webapp:latest"
