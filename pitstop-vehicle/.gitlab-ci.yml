stages:
  - build
  - security
  - package

variables:
  NODE_ENV: production

build-vehicle-service:
  stage: build
  image: node:10
  script:
    - echo "Installing dependencies for vehicle service"
    - cd ./pitstop-vehicle
    - npm install --production=false
    - echo "Dependencies installed successfully"
  cache:
    paths:
      - pitstop-vehicle/node_modules/
  artifacts:
    paths:
      - pitstop-vehicle/node_modules/
      - pitstop-vehicle/package*.json
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "devSecOps" || $CI_PIPELINE_SOURCE == "merge_request_event"

pitstop-vehicle-security-scan:
  stage: security
  image: aquasec/trivy:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "devSecOps"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success
  script:
    - trivy fs --format json -o trivy-report.json --severity HIGH,CRITICAL  ./pitstop-vehicle
  artifacts:
    paths:
      - trivy-report.json
    expire_in: 1 week

package-vehicle-service:
  stage: package
  image: docker:24
  services:
    - docker:24-dind
  script:
    - echo "Building and pushing vehicle service Docker image"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - docker build -t "$CI_REGISTRY_USER/pitstop-vehicle:$CI_COMMIT_REF_NAME" ./pitstop-vehicle
    - docker push "$CI_REGISTRY_USER/pitstop-vehicle:$CI_COMMIT_REF_NAME"
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_PIPELINE_SOURCE == "merge_request_event"